import numpy as np

blocks = [['IIIIIIIIIIXZZY', 'IIIIIIIIIIYZZX'], ['IIIIIIIIIXZZZY', 'IIIIIIIIIYZZZX'],
          ['IIIIIIIIXZZZZY', 'IIIIIIIIYZZZZX'],
          ['IIIIIIIXZZZZZY', 'IIIIIIIYZZZZZX'], ['IIIIIIIIIIXZYI', 'IIIIIIIIIIYZXI'],
          ['IIIIIIIIIXZZYI', 'IIIIIIIIIYZZXI'],
          ['IIIIIIIIXZZZYI', 'IIIIIIIIYZZZXI'], ['IIIIIIIXZZZZYI', 'IIIIIIIYZZZZXI'],
          ['IIIIIIIIIIXYII', 'IIIIIIIIIIYXII'],
          ['IIIIIIIIIXZYII', 'IIIIIIIIIYZXII'], ['IIIIIIIIXZZYII', 'IIIIIIIIYZZXII'],
          ['IIIIIIIXZZZYII', 'IIIIIIIYZZZXII'],
          ['IIIXZZYIIIIIII', 'IIIYZZXIIIIIII'], ['IIXZZZYIIIIIII', 'IIYZZZXIIIIIII'],
          ['IXZZZZYIIIIIII', 'IYZZZZXIIIIIII'],
          ['XZZZZZYIIIIIII', 'YZZZZZXIIIIIII'], ['IIIXZYIIIIIIII', 'IIIYZXIIIIIIII'],
          ['IIXZZYIIIIIIII', 'IIYZZXIIIIIIII'],
          ['IXZZZYIIIIIIII', 'IYZZZXIIIIIIII'], ['XZZZZYIIIIIIII', 'YZZZZXIIIIIIII'],
          ['IIIXYIIIIIIIII', 'IIIYXIIIIIIIII'],
          ['IIXZYIIIIIIIII', 'IIYZXIIIIIIIII'], ['IXZZYIIIIIIIII', 'IYZZXIIIIIIIII'],
          ['XZZZYIIIIIIIII', 'YZZZXIIIIIIIII'],
          ['IIIIIIIIIYYIXY', 'IIIIIIIIIXXIXY', 'IIIIIIIIIXYIYY', 'IIIIIIIIIYXIYY', 'IIIIIIIIIXYIXX', 'IIIIIIIIIYXIXX',
           'IIIIIIIIIYYIYX', 'IIIIIIIIIXXIYX'],
          ['IIIIIIIIYZYIXY', 'IIIIIIIIXZXIXY', 'IIIIIIIIXZYIYY', 'IIIIIIIIYZXIYY', 'IIIIIIIIXZYIXX', 'IIIIIIIIYZXIXX',
           'IIIIIIIIYZYIYX', 'IIIIIIIIXZXIYX'],
          ['IIIIIIIYZZYIXY', 'IIIIIIIXZZXIXY', 'IIIIIIIXZZYIYY', 'IIIIIIIYZZXIYY', 'IIIIIIIXZZYIXX', 'IIIIIIIYZZXIXX',
           'IIIIIIIYZZYIYX', 'IIIIIIIXZZXIYX'],
          ['IIIIIIIIIYYXZY', 'IIIIIIIIIXXXZY', 'IIIIIIIIIXYYZY', 'IIIIIIIIIYXYZY', 'IIIIIIIIIXYXZX', 'IIIIIIIIIYXXZX',
           'IIIIIIIIIYYYZX', 'IIIIIIIIIXXYZX'],
          ['IIIIIIIIYZYXZY', 'IIIIIIIIXZXXZY', 'IIIIIIIIXZYYZY', 'IIIIIIIIYZXYZY', 'IIIIIIIIXZYXZX', 'IIIIIIIIYZXXZX',
           'IIIIIIIIYZYYZX', 'IIIIIIIIXZXYZX'],
          ['IIIIIIIYZZYXZY', 'IIIIIIIXZZXXZY', 'IIIIIIIXZZYYZY', 'IIIIIIIYZZXYZY', 'IIIIIIIXZZYXZX', 'IIIIIIIYZZXXZX',
           'IIIIIIIYZZYYZX', 'IIIIIIIXZZXYZX'],
          ['IIIYZZYIIIXZZY', 'IIIXZZYIIIYZZY', 'IIIXZZXIIIXZZY', 'IIIYZZXIIIYZZY', 'IIIXZZYIIIXZZX', 'IIIYZZYIIIYZZX',
           'IIIYZZXIIIXZZX', 'IIIXZZXIIIYZZX'],
          ['IIYZZZYIIIXZZY', 'IIXZZZYIIIYZZY', 'IIXZZZXIIIXZZY', 'IIYZZZXIIIYZZY', 'IIXZZZYIIIXZZX', 'IIYZZZYIIIYZZX',
           'IIYZZZXIIIXZZX', 'IIXZZZXIIIYZZX'],
          ['IYZZZZYIIIXZZY', 'IXZZZZYIIIYZZY', 'IXZZZZXIIIXZZY', 'IYZZZZXIIIYZZY', 'IXZZZZYIIIXZZX', 'IYZZZZYIIIYZZX',]]
           # 'IYZZZZXIIIXZZX', 'IXZZZZXIIIYZZX'], ['YZZZZZYIIIXZZY', 'XZZZZZYIIIYZZY', 'XZZZZZXIIIXZZY', 'YZZZZZXIIIY']]

for blk in blocks:
    weights = [len(pauli) - pauli.count('I') for pauli in blk]


    from phoenix.models.paulis import BSF
    tab = BSF(blk)
    print(tab.qubits_with_ops, len(tab.qubits_with_ops), weights)

    # print(weights)




from functools import reduce
from operator import add
paulis = reduce(add, blocks)
coeffs = np.random.rand(len(paulis))

from phoenix.transforms.pauli_pass import group_paulis_and_coeffs

groups = group_paulis_and_coeffs(paulis, coeffs)

print(groups)

